name: Production Build Backend API GenggamMakna

on:
  push:
    branches:
      - production

jobs:
  build:
    runs-on: ubuntu-v1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove old Docker image
        run: |
          docker rmi -f ${{ secrets.DOCKER_USERNAME }}/genggam-makna-backend-api:v1 || true
          docker rmi -f ${{ secrets.DOCKER_USERNAME }}/genggam-makna-backend-api:${{ github.sha }} || true

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/genggam-makna-backend-api:v1,${{ secrets.DOCKER_USERNAME }}
          file: ./Dockerfile
          no-cache: true

      - name: Save the private key as a temporary file
        run: |
          echo "${{ secrets.VPS_SSH_KEY }}" > private_key
          chmod 600 private_key

      - name: Copy docker-compose.yml to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          scp -o StrictHostKeyChecking=no -i private_key docker-compose.yml ${VPS_USER}@${VPS_HOST}:/etc/ci-cd/genggam-makna-backend-apis/docker-compose.yml

      - name: Copy Dockerfile to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          scp -o StrictHostKeyChecking=no -i private_key Dockerfile ${VPS_USER}@${VPS_HOST}:/etc/ci-cd/genggam-makna-backend-apis/Dockerfile

      - name: Copy go.mod, go.sum to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          scp -o StrictHostKeyChecking=no -i private_key go.mod ${VPS_USER}@${VPS_HOST}:/etc/ci-cd/genggam-makna-backend-apis/go.mod
          scp -o StrictHostKeyChecking=no -i private_key go.sum ${VPS_USER}@${VPS_HOST}:/etc/ci-cd/genggam-makna-backend-apis/go.sum

      - name: Stop existing containers on the server
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${VPS_USER}@${VPS_HOST} 'docker-compose -f /etc/ci-cd/genggam-makna-backend-apis/docker-compose.yml down'

      - name: Delete old containers on server
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${VPS_USER}@${VPS_HOST} '
            docker ps -a -q -f "name=genggam-makna-backend-api" | xargs -r docker rm
          '

#      - name: Delete old images on server
#        env:
#          VPS_USER: ${{ secrets.VPS_USER }}
#          VPS_HOST: ${{ secrets.VPS_HOST }}
#        run: |
#          ssh -o StrictHostKeyChecking=no -i private_key ${VPS_USER}@${VPS_HOST} '
#            docker rmi -f ${{ secrets.DOCKER_USERNAME }}/genggam-makna-backend-api:v1 || true
#          '

      - name: Run SSH commands to update and run Docker Compose on VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${VPS_USER}@${VPS_HOST} 'DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} docker-compose -f /etc/ci-cd/genggam-makna-backend-apis/docker-compose.yml up -d --force-recreate --remove-orphans'

      - name: Check container status
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${VPS_USER}@${VPS_HOST} 'docker ps'